name: Check Dead Domains

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 1 * * *'  # Exécute à 1h GMT tous les jours
  workflow_dispatch: # Permet de lancer manuellement le workflow

jobs:
  check_domains:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        batch: [0, 1, 2, 3, 4]  # Divise en 5 parties pour exécuter en parallèle (ajuste si nécessaire)
      fail-fast: false  # Continue même si un job échoue
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dnspython

      - name: Run Python script
        run: |
          python dns-checker.py --batch ${{ matrix.batch }}  # Passe le numéro du batch

      - name: Upload batch result artifact
        uses: actions/upload-artifact@v4
        with:
          name: dead-domains-batch-${{ matrix.batch }}  # Nom de l'artefact par batch
          path: dead_batch_${{ matrix.batch }}.txt  # Fichier résultant pour chaque batch

  # Étape de fusion des résultats des fichiers batchs
  merge_results:
    runs-on: ubuntu-latest
    needs: check_domains  # S'assure que les jobs de check_domains sont terminés avant de lancer cette étape
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Combine all dead domains files
        run: |
          # Fusionne tous les fichiers dead_batch_X.txt en un seul fichier final
          cat dead_batch_*.txt > combined_dead_domains.txt

      - name: Commit and Push final result to repository
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git add combined_dead_domains.txt
          git commit -m "Update dead domains list"
          git push
